// Code generated by mockery v2.42.2. DO NOT EDIT.

package proxy

import mock "github.com/stretchr/testify/mock"

// MockaccountValidator is an autogenerated mock type for the accountValidator type
type MockaccountValidator struct {
	mock.Mock
}

type MockaccountValidator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockaccountValidator) EXPECT() *MockaccountValidator_Expecter {
	return &MockaccountValidator_Expecter{mock: &_m.Mock}
}

// ValidateAccount provides a mock function with given fields: username, password
func (_m *MockaccountValidator) ValidateAccount(username string, password string) error {
	ret := _m.Called(username, password)

	if len(ret) == 0 {
		panic("no return value specified for ValidateAccount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(username, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockaccountValidator_ValidateAccount_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateAccount'
type MockaccountValidator_ValidateAccount_Call struct {
	*mock.Call
}

// ValidateAccount is a helper method to define mock.On call
//   - username string
//   - password string
func (_e *MockaccountValidator_Expecter) ValidateAccount(username interface{}, password interface{}) *MockaccountValidator_ValidateAccount_Call {
	return &MockaccountValidator_ValidateAccount_Call{Call: _e.mock.On("ValidateAccount", username, password)}
}

func (_c *MockaccountValidator_ValidateAccount_Call) Run(run func(username string, password string)) *MockaccountValidator_ValidateAccount_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockaccountValidator_ValidateAccount_Call) Return(_a0 error) *MockaccountValidator_ValidateAccount_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockaccountValidator_ValidateAccount_Call) RunAndReturn(run func(string, string) error) *MockaccountValidator_ValidateAccount_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockaccountValidator creates a new instance of MockaccountValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockaccountValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockaccountValidator {
	mock := &MockaccountValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
