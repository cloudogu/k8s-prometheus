// Code generated by mockery v2.42.2. DO NOT EDIT.

package prometheus

import mock "github.com/stretchr/testify/mock"

// MockWebConfigReaderWriter is an autogenerated mock type for the WebConfigReaderWriter type
type MockWebConfigReaderWriter struct {
	mock.Mock
}

type MockWebConfigReaderWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockWebConfigReaderWriter) EXPECT() *MockWebConfigReaderWriter_Expecter {
	return &MockWebConfigReaderWriter_Expecter{mock: &_m.Mock}
}

// ReadWebConfig provides a mock function with given fields:
func (_m *MockWebConfigReaderWriter) ReadWebConfig() (*WebConfig, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ReadWebConfig")
	}

	var r0 *WebConfig
	var r1 error
	if rf, ok := ret.Get(0).(func() (*WebConfig, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *WebConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*WebConfig)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockWebConfigReaderWriter_ReadWebConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadWebConfig'
type MockWebConfigReaderWriter_ReadWebConfig_Call struct {
	*mock.Call
}

// ReadWebConfig is a helper method to define mock.On call
func (_e *MockWebConfigReaderWriter_Expecter) ReadWebConfig() *MockWebConfigReaderWriter_ReadWebConfig_Call {
	return &MockWebConfigReaderWriter_ReadWebConfig_Call{Call: _e.mock.On("ReadWebConfig")}
}

func (_c *MockWebConfigReaderWriter_ReadWebConfig_Call) Run(run func()) *MockWebConfigReaderWriter_ReadWebConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockWebConfigReaderWriter_ReadWebConfig_Call) Return(_a0 *WebConfig, _a1 error) *MockWebConfigReaderWriter_ReadWebConfig_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockWebConfigReaderWriter_ReadWebConfig_Call) RunAndReturn(run func() (*WebConfig, error)) *MockWebConfigReaderWriter_ReadWebConfig_Call {
	_c.Call.Return(run)
	return _c
}

// WriteWebConfig provides a mock function with given fields: webConfig
func (_m *MockWebConfigReaderWriter) WriteWebConfig(webConfig *WebConfig) error {
	ret := _m.Called(webConfig)

	if len(ret) == 0 {
		panic("no return value specified for WriteWebConfig")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*WebConfig) error); ok {
		r0 = rf(webConfig)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockWebConfigReaderWriter_WriteWebConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteWebConfig'
type MockWebConfigReaderWriter_WriteWebConfig_Call struct {
	*mock.Call
}

// WriteWebConfig is a helper method to define mock.On call
//   - webConfig *WebConfig
func (_e *MockWebConfigReaderWriter_Expecter) WriteWebConfig(webConfig interface{}) *MockWebConfigReaderWriter_WriteWebConfig_Call {
	return &MockWebConfigReaderWriter_WriteWebConfig_Call{Call: _e.mock.On("WriteWebConfig", webConfig)}
}

func (_c *MockWebConfigReaderWriter_WriteWebConfig_Call) Run(run func(webConfig *WebConfig)) *MockWebConfigReaderWriter_WriteWebConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*WebConfig))
	})
	return _c
}

func (_c *MockWebConfigReaderWriter_WriteWebConfig_Call) Return(_a0 error) *MockWebConfigReaderWriter_WriteWebConfig_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockWebConfigReaderWriter_WriteWebConfig_Call) RunAndReturn(run func(*WebConfig) error) *MockWebConfigReaderWriter_WriteWebConfig_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockWebConfigReaderWriter creates a new instance of MockWebConfigReaderWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockWebConfigReaderWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockWebConfigReaderWriter {
	mock := &MockWebConfigReaderWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
